<1 - 1 데이터 모델링의 이해>

모델링 특징
- 추상화 : 현실세계, 다양한 현상 일정한 양식인 표기법에 의해 표현 (= 모형화, 가설적)
- 단순화 : 복잡한 현실세계를 약속된 규약에 의해 제한된 표기법이나 언어로 표현
- 명확화 : 누구나 이해하기 쉽게 대상에 대한 애매모호함 제거

모델링의 세 가지 관점
- 데이터 관점 : 업무가 어떤 데이터와 관련이 있는지, 데이터간 관계 무엇인지
- 프로세스 관점 : 업무가 실제하고 있는 일 무엇인지, 무엇을 해야하는지
- 상관 관점 : 업무 처리하는 방법에 따라 데이터 어떻게 영향 받고 있는지

데이터 모델링 정의
- 정보시스템 구축 위한 데이터 관점의 업무 분석기법, 현실세계 데이터에 대해 약속된 표기법에 의해 표현하는 과정, 데이터베이스 구축하기 위한 분석, 설계과정

데이터 모델링 기능
- 명세화, 구조화, 문서화, 댜앙환 관점, 상세수준 표현

데이터 모델링의 유의점
- 중복, 비유연성, 비일관성

데이터 모델링 중요성
- 파급효과가 크다
- 복잡한 정보 요구사항의 간결한 표현
- 데이터 품질을 유지

데이터 모델링의 3단계 진행
- (충상적)개념적 -> 논리적 -> 물리적(구체적)
- 개념적 데이터 모델링(in계획분석단계) : 추상화, 업무중심적, 포괄적, 전사적, EA수립시 사용
- 논리적 데이터 모델링(in분석단계) : KEY, 속성, 관계 표현, 재사용성 높음 (정규화)
- 물리적 데이터 모델링(in설계단계) : 실제 데이터베이스 이식할 수 있도록 성능, 저장 등 물리적 성격 고려

데이터 독립성 필요 이유
- 유지보수 비용증가, 데이터 중복성, 복잡성 증가, 요구사항 대응 저하

ANSI / SPARC 3단계 구조
- 논리적 독립성(외부단계 - 개념적단계) : 개념적스키마 변경, 외부스키마 영향 없음, 논리적 구조 변경되어도 응용프로그램 영향 없음
- 물리적 독립성(개념적단계 - 내부적단계) : 내부스키마 변경, 외부/개념스키마 영향 없음, 저장장치의 구조변경은 응용프로그램과 개념스키마에 영향 없음

좋은 데이터 모델의 요소
- 완전성, 중복배제, 업무규칙, 데이터 재사용, 의사소통, 통합성

데이터 모델링 세가지 요소
- 어떤 것(Thing)
- 성격(Attributes)
- 관계(Relationships)

엔터티의 개념
- 명사에 해당
- 저장이 되기 위한 어떤 것(Thing)

엔터티의 특징
- 업무에서 필요한 정보, 식별이 가능해야 함, 인스턴스의 집합(두개이상), 업무 프로세스에 의해 이용, 속성 포함, 관계 존재

엔터티의 분류
1. 유무형
- 유형 : 물리적인 형태, 안정적(사원, 물품, 강사)
- 개념 : 물리적 형태 존재하지 않고 관리해야 할 개념적 정보(조직, 보험상품)
- 사건 : 업무 수행함에 따라 발생됨(주문, 청구, 미납)
2. 발생시점(기본 -> 중심 -> 행위)
- 기본 : 원래 존재하는 정보. 독립적으로 생성 가능.(사원, 부서, 고객)
- 중심 : 기본엔터티로부터 발생되고 업무에 있어서 중심적인 역할(계약, 접수)
- 행위 : 두 개 이상의 부모엔터티로부터 발생되고 자주 내용 바뀌거나 데이터 양 증가(주문내역, 계약진행)

속성의 개념
- 업무에서 필요, 의미상 미분리, 인스턴스의 구성요소

인스턴스 - 속성 - 엔터티 의 관계
- 인스턴스 2개이상 엔터티, 2개 이상 속성을 엔터티는 가짐, 1:1(속성 : 속성값)

속성의 분류
- 기본속성(업무로부터 추출한 모든 속성_원래속성)
- 설계 속성(코드성 속성, 1:1치환), 파생 속성(계산된 값)

도메인의 정의
- 각 속성이 가질 수 있는 값의 범위

관계
- 인스턴스의 관계가 페어링 -> 페어링의 집합이 관계(Relation)

관계 표기법
- 관계명(Membership), 관계차수(Cardinality), 관계선택사양(Optionality_필수관계, 선택관계)

관계 체크사항
- 연관규칙 존재하는지, 엔터티 사이 정보 조합이 발생되는지, 관계연결에 대한 규칙이 서술되어있는지, 관계연결 가능하게 하는 동사 있는지

식별자 분류
- 대표성 여부(주식별자/보조식별자), 스스로 생성여부(내부식별자/외부식별자),
- 속성의 수(단일식별자/복합식별자), 대체여부(본질식별자/인조식별자)

주식별자의 특징
- 유일성, 희소성, 불변성, 존재성

식별자/비식별자 관계 (상속여부가 Key Point)
- 식별자 관계 : 부모로부터 받은 식별자를 자신엔터티의 주식별자로 이용(강한 연결관계, 실선표현)
- 비식별자 관계 : 부모로부터 속성 받았지만 일반속성으로 사용(약한 연결관계, 점선 표현)

비식별자 관계 설정 고려사항
- 관계분석 -> 관계의 강/약 분석(약) -> 자식테이블 독립PK필요 -> SQL 복잡도 증가(비식별자)

식별자 관계설정 고려사항
- 강한관계, 주식별자 PK사용

<1-2 데이터 모델과 성능>

성능 데이터 모델링 고려사항
- 정규화 -> 용량산정 -> 트랜잭션 유형 파악 -> 반정규화 -> 이력모델 조정, PK/FK 조정, 슈퍼/서브타입 조정 -> 성능관점 데이터 모델 검증
- (분석/설계 단계에서 성능 데이터 모델링하기)

함수적 종속성
- 데이터들이 어떤 기준값에 의해 종속되는 현상(기준값을 결정자, 종속되는 값을 종속자) ex) 주민등록번호 - (이름, 출생지, 주소)

정규화
- 정규화 수행하면 데이터 처리(DML) 성능 향상, 조회는 향상 또는 저하 될 수 있음

반정규화 장점
- 일반적으로 조회 성능향상이 됨

반정규화 절차
- 반정규화 대상 조사 -> 다른방법 검토 -> 반정규화 적용

반정규화 기법
- 테이블 반정규화
    테이블병합(1:1, 1:M, 슈퍼/서브타입)
    테이블 분할(수직_컬럼단위, 수평_로우단위)
    테이블 추가(중복, 통계, 이력, 부분)
- 컬럼 반정규화 : 중복컬럼추가, 파생컬럼추가, 이력테이블 컬럼 추가, PK에 의한 컬럼추가, 응용시스템 오작동 위한 컬럼추가
- 관계 반정규화 : 중복관계 추가, 테이블, 컬럼 반정규화와 달리 데이터 무결성 영향 없음

대량 데이터
- 테이블의 수평, 수직 분할로 모델링 해야 한다
- 로우체이닝 : 로우 길이가 너무 길어서 데이터 블록 하나에 데이터가 모두 저장되지 않고 두 개 이상의 블록에 걸쳐 하나의 로우가 저장되어 있는 형태
- 로우마이그레이션 : 데이터 블록에서 수정이 발생하면 수정된 데이터를 해당 데이터 블록에서 저장하지 못하고 다른 블록의 빈 공간을 찾아 저장하는 방식

파티셔닝
- RANGE PARTITION(범위 나눠서. 년+월 이요하여 12개 파테션 테이블. 대상 테이블이 날짜 또는 숫자값으로 분리가 가능하고 각 영역별로 트랜잭션이 분리가능할 때 적용)
- LIST PARTITION(특정값 지정, 고객_서울, 고객_인천 지점별 파티션 테이블)
- HASH PARTITION(hash 조건 따라 해슁 알고리즘 적용되어 테이블 분리)

슈퍼/서브 타입 모델
- 슈퍼타입 : 공통부분
- 서브엔터티 : 공통부분 상속받아 다른 엔터티와 차이가 있는 속성 대해 별도로 구분
- 변환기준 : 데이터 양 & 트랜잭션 유형

슈퍼/서브타입 변환
- One to One : 개별테이블, 확장성 우수, 조인성능 나쁨, I/O좋음, 관리 안좋음
- Plus Type : 슈퍼서브타입테이블, 확장성 보통, 조인성능 나쁨, I/O좋음, 관리 안좋음
- Single Type : 하나의 테이블, 확장성 나쁨, 조인성능 우수, I/O나쁨. 관리 좋음

인덱스 특성을 고려한 PK/FK 데이터베이스 성능향상 이해
- PK 컬럼 순서 중요, FK컬럼의 인덱스 컬럼화 필요

분산 데이터베이스 투명성
- 분할(단편화), 위치, 지역사상, 중복, 장애, 병행 투명성

분산 데이터베이스의 장단점
- 장점 : 지역자치성, 점증적 시스템 용량확장, 신뢰성, 가용성, 효용성, 융통성, 빠른응답, 통신비용 절감, 데이터가용성, 신뢰성, 시스템규모조절, 요구수용 증대
- 단점 : 비용, 오류잠재성 증대, 처리비용, 설계관리복잡성, 불규칙한 응답속도, 통제어려움, 데이터무결성위협

분산 데이터베이스의 적용 기법
- 테이블 위치 분산 : 테이블 구조 변하지 X, 각각의 테이블 위치가 다르게 지정
- 테이블 분할 분산 : 각각 테이블을 쪼개어 분산
        수평 분할 - 로우단위, 수직 분할 - 컬럼단위
- 테이블 복제 분산 : 동일한 테이블 다른 지역이나 서버에서 동시에 생성하여 관리
        부분복제 - 통합된 건 본사, 각 지사별로 해당 로우
        광역복제 - 본사, 지사 모두 동일한 데이터 가지고 있음
- 테이블 요약 분산
        분산요약 - 각 지사별로 요약, 본사에 통합
        통합요약 - 각 지사별로 존재하는 다른 내용이 정보요약, 본사에 통합

1차 정규형 : 모든 도메인이 원자값으로 구성되도록 하는 정규형, 중복 제거
2차 정규형 : 부분적 함수 종속 제거(완전 함수 종속)
3차 정규형 : 이행적 함수(X->Y, Y->Z, X->Z) 종속 제거

<2-1 SQL기본>

Table 의 구조 : 열(Column), 필드(Field, value), 행(Row)
정규화 : 테이블 분할하여 데이터 정확성을 확보하고, 불필요한 중복을 줄이는 프로세스
ERD 구성요소 : 엔터티, 관계, 속성

데이터 유형
- NUMERIC : 정수, 실수
- CHARACTER(s)/CHAR(s) : 고정 길이
- VARCHAR2(s)/VARCHAR(s) : 가변길이

CHAR VS VARCHAR
- CHAR 문자열 비교 : 공백을 채워서 비교. 우선 짧은 쪽의 끝에 공백을 추가하여 2개의 데이터가 같은 길이가 되도록 한다. 그리고 앞에서부터 한 문자씩 비교한다. 끝의 공백만 다른 문자열은 같다고 판단한다.
- VARCHAR 유형 : 맨 처음부터 한 무자씩 비교하고 공백도 하나의 문자로 취급하므로 끝의 공백이 다르면 다른 문자로 판단한다.
ex) CHAR 유형 'AA' = 'AA  ', VARCHAR 유형 'AA' <> ''

DDL(데이터 정의어) : 데이터 구조를 정의하는데 사용되는 명령어
- CRATE, ALTER, DROP, RENAME

테이블 생성 시 주의 사항 : 문자로 반드시 시작, A-Z, a-z, 0-9, _, $, #문자만 허용

테이블 구조 확인
- Oracle : DESCIBE 테이블명;
- SQL server : exec sp_hepl 'dbo.테이블명'

제약조건
- 기본키(PRIMARY KEY) : 테이블에 존재하는 각 행을 한 가지 의미로 특정할 수 있는 한 개 이상 컬럼, 기본키제약 = 고유키제약 & NOT NULL 제약
- 고유키(UNIQUE KEY) : 고유하게 식별하기 위한 고유키, NULL 값 가진 행 여러개 있어도 괜찮음
- 외부키(FOREIGN KEY) : 다른 테이블의 기본키로 사용되고 있는 관계를 연결하는 컬럼
- NULL : 아직 정의되지 않은 미지의 값, 현재 데이터를 입력하지 못하는 경우
- DEFAULT : 기본값을 사전에 설정, 데이터 지정하지 않는 경우 사전에 정의된 기본값 자동 입력됨

SELECT 문장을 통한 테이블 생성 사례
1. ORACLE CTAS : CREATE TABLE ~ AS SELECT ~
2. SQL SERVERE : SELECT * INTO TABLE1 FROM TABLE2
* 기존 테이블의 제약조건 중에 NOT NULL만 새로운 복제 테이블에 적용되고, 기본키, 고유키, 외래키, CKECK 등의 다른 제약조건은 없어진다.

